networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24

services:

  zookeeper:
      image: confluentinc/cp-zookeeper:5.1.0
      hostname: zookeeper
      container_name: zookeeper-iot
      ports:
        - 2181:2181
      networks:
        - net
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
      image: confluentinc/cp-kafka:5.1.0
      ports:
        - 9092:9092
        - 29092:29092
      depends_on:
        - zookeeper
      environment:
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.request.logger=WARN"
        KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      hostname: kafka
      container_name: kafka-sensor
      networks:
        - net
      restart: always

  producer:
    build:
      context: ./kafka-producer
    container_name: kafka-producer
    depends_on:
      - kafka
    networks:
      - net
    environment:
      - KAFKA_BROKER=kafka:9092

  cassandra:
    image: 'bitnami/cassandra:latest'
    hostname: cassandra
    networks:
      net:
        ipv4_address: 172.22.0.6
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_USERNAME: cassandra  # Explicitly set username for clarity
      CASSANDRA_PASSWORD: cassandra  # Default password, ensure it matches in consumer config
      MAX_HEAP_SIZE: 256M
      HEAP_NEWSIZE: 128M
    container_name: cassandra-iot
    volumes:
      - ./data/schema.cql:/schema.cql

  spark-consumer:
    build: ./spark-consumer
    container_name: spark-consumer
    networks:
      - net
    depends_on:
      - kafka
      - cassandra
    environment:
      - SPARK_MASTER=spark://kafka:7077   # You can set this to local if needed
    volumes:
      - ./spark-consumer:/opt/spark-data
      - ./checkpoint:/tmp/spark/checkpoint
    ports:
      - "4040:4040"
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - net
    depends_on:
      - cassandra

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    hostname: namenode
    volumes:
    - ./data/namenode:/hadoop/dfs/name
    environment:
    - CLUSTER_NAME=test
    - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    networks:
    - net
    ports:
    - 50070:50070 # HDFS web UI
    - 8020:8020 # HDFS NameNode Port

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode
    hostname: datanode
    volumes:
    - ./data/datanode:/hadoop/dfs/data
    environment:
    - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - namenode
    networks:
     - net
    ports:
     - 50075:50075 # Datanode Web UI
     - 50010:50010 # Datanode data port


  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    networks:
      - net

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    networks:
      - net

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    networks:
      - net

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"  # Spark Master UI
    networks:
      - net
    restart: always

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_MODE=worker
    ports:
      - "8081:8081"  # Spark Worker UI
    depends_on:
      - spark-master
    networks:
      - net


  batch_layer:
    build:
      context: ./batch_layer
    container_name: batch_layer
    depends_on:
      - kafka
      - namenode
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - KAFKA_BROKER=kafka:9092
      - HDFS_OUTPUT_DIR=hdfs://namenode:8020/electrical_data
    networks:
      - net
    volumes:
      - ./batch_layer:/opt/spark/data
    ports:
      - "4041:4040"  # Spark UI
    restart: always


  zeppelin:
    image: apache/zeppelin:0.9.0
    container_name: zeppelin
    ports:
      - "8082:8082"
    environment:
      - ZEPPELIN_PORT=8082
      - ZEPPELIN_HIVE_ENABLED=true  # Enable Hive interpreter in Zeppelin
      - HIVE_METASTORE_URI=thrift://hive-metastore:9083  # Connect to Hive metastore
    volumes:
      - zeppelin-notebooks:/zeppelin-notebooks
      - zeppelin-logs:/zeppelin-logs
      - ./zeppelin-site.xml:/opt/zeppelin/conf/zeppelin-site.xml
    networks:
      - net
    restart: always
    depends_on:
      - hive-server
      - hive-metastore

volumes:
  zeppelin-notebooks:
  zeppelin-logs:
